// main global script file
import InventoryItem*ItemGiven;        // Item given to a character

// called when the game starts, before the first room is loaded

// =======================================================================================
function game_start() 
{
  
  Mouse.Visible=false;
  gScummBar.Visible=false;
  gAction.Visible=false;
  player.Transparency = 100;
}

// put anything you want to happen every game cycle in here
//function repeatedly_execute() 
//{
//}

// put here anything you want to happen every game cycle, even when the game is blocked
//function repeatedly_execute_always() 
//{
//}

void ShowOptions()
{
    gAction.Visible = false;
    OptionGui.ShowOptions();
}


// called when a key is pressed. keycode holds the key's ASCII code
function on_key_press(eKeyCode keycode) 
{
  if (keycode == eKeyEscape) ShowOptions();
  if (keycode == eKeyCtrlC) gQuit.Visible=true;  // Ctrl-C or CTRL-Q QUIT
  if (keycode == eKeyF12)   SaveScreenShot("scrnshot.pcx");  // F12
  if (keycode == eKeyCtrlS) Debug(0,0); // Ctrl-S, give all inventory
  if (keycode == eKeyCtrlV) Debug(1,0); // Ctrl-V, version
  if (keycode == eKeyCtrlA) Debug(2,0); // Ctrl-A, show walkable areas
  if (keycode == eKeyCtrlX) Debug(3,0); // Ctrl-X, teleport to ro 
}

//function on_mouse_click(MouseButton button) // called when a mouse button is clicked. button is either LEFT or RIGHT
//{
//}

function on_event(EventType event, int data) {
  if (event==eEventLeaveRoom)
  if (event==eEventRestoreGame) {
    Verbs.Localize();
  }
  if (event==eEventEnterRoomBeforeFadein || event==eEventRestoreGame)
    player.PlaceOnWalkableArea();
}

function dialog_request(int param) {
}


////////////////////////////////////////////////////////////////////////////////////
// Begin of GUI handling
////////////////////////////////////////////////////////////////////////////////////
function Action_Click(GUIControl *control, MouseButton button) {
  Verbs.SetAction(Verbs.GetButtonAction(control.AsButton));
}

function ScrollInv_Click(GUIControl *control, MouseButton button) {
  if (control == btnInvUp) invMain.ScrollUp();
  else invMain.ScrollDown();  
}

/*function btnShowOptions_OnClick(GUIControl *control, MouseButton button)
{
  ShowOptions();
}*/

function btnOptions_OnClick(GUIControl *control, MouseButton button)
{
    OptionGui.OnClick(control, button);
}

function btnOptions_OnSliderChange(GUIControl *control)
{
    OptionGui.OnSliderChange(control);
}


////////////////////////////////////////////////////////////////////////////////////
// End of GUI handling
////////////////////////////////////////////////////////////////////////////////////



/***********************************************************************
 * Inventory functions
 * 
 ***********************************************************************/

function iCigarretes_OtherClick()
{
   if(Verbs.UsedAction(eGA_LookAt)) {
    player.Say("Asesino!");
   }
   else if(Verbs.UsedAction(eGA_Use)) {
      player.Say("Ahora no");
   }
   else Verbs.Unhandled();
}

function iCharger_OtherClick()
{
   if(Verbs.UsedAction(eGA_LookAt)) {
    player.Say("Por fin tengo el cargador");
   }
   else Verbs.Unhandled();
}

function iCoat_OtherClick()
{
   if(Verbs.UsedAction(eGA_LookAt)) {
    player.Say("Mi cazadora, negra, obviamente");
   }
   else Verbs.Unhandled();
}

function iWallet_OtherClick()
{
   if(Verbs.UsedAction(eGA_LookAt)) {
    player.Say("Mi billetera");
   }
   else if(Verbs.UsedAction(eGA_Open)) {
    if(hasOpenedWallet){
      player.Say("No hay nada mas");
    }
    else{
      player.Say("A ver que tenemos por aqui...");
      Wait(10);
      player.Say("Mi tarjeta de credito");
      player.AddInventory(iCreditCard);
      player.Say("Y el carnet del Club de Fans del Fary");
      player.AddInventory(iFaryCard);
      hasOpenedWallet = true;
      player.Say("Cojonudo");
    }
   }
   else Verbs.Unhandled();
}

function iCreditCard_OtherClick()
{
   if(Verbs.UsedAction(eGA_LookAt)) {
    player.Say("Siempre Cajalon");
   }
   else Verbs.Unhandled();
}

function iFaryCard_OtherClick()
{
   if(Verbs.UsedAction(eGA_LookAt)) {
    player.Say("Orgulloso socio del club de fans del Fary desde 1999");
    player.Say("Mas viejo que la humedad soy, caguen la leche merche");
   }
   else Verbs.Unhandled();
}

function iLever_OtherClick()
{
   if(Verbs.UsedAction(eGA_LookAt)) {
    player.Say("La siempre util palanca");
   }
   else Verbs.Unhandled();
}

function iRemoteControl_OtherClick()
{
  if(Verbs.UsedAction(eGA_LookAt)) {
      player.Say("El poder!");
   }
   else if(Verbs.UsedAction(eGA_Open)) {
     if(areBatteriesOutFromRemoteControl){
       player.Say("Ya he sacado las pilas");
      }
      else{
        areBatteriesOutFromRemoteControl = true;
        player.AddInventory(iBatteries);
        player.Say("Pilas a tope de carga");
      }
   }
   else if(Verbs.UsedAction(eGA_UseInv) && player.ActiveInventory == iBatteries){
    player.LoseInventory(iBatteries);
    areBatteriesOutFromRemoteControl = false;
    player.Say("Pa dentro");
   }
   else Verbs.Unhandled();
}

function iClock_OtherClick()
{

if(Verbs.UsedAction(eGA_LookAt)) {
  if(hasPutBatteriesOnClock){
    player.Say("Ya funciona, deberia dejarlo en su sitio");
  }
  else{
    player.Say("Parece que no tiene pilas");
    }
   }
else if(Verbs.UsedAction(eGA_UseInv) && player.ActiveInventory == iBatteries){
    hasNeedToFixClock = false;
    hasPutBatteriesOnClock = true;
    player.LoseInventory(iBatteries);
    player.Say("Arreglao");
 }
 else Verbs.Unhandled();
}

function iMobile_OtherClick()
{
if(Verbs.UsedAction(eGA_LookAt)) {
    player.FaceDirection(eDirectionDown);
    if(isMobileCharged){
      player.Say("Vamos, vamos, mensajes...");
      player.Say("Se quien tiene lo que buscas");
      player.Say("Se quien tiene el Big Whoop");
      player.Say("Lo tiene...");
      bedroomMusic.Stop();
      mouse.Visible = false;
      gScummBar.Visible=false;
      gAction.Visible=false;
      game.text_speed = 7;
      Wait(50);
      endingMusic.Play();
      Wait(5);
      player.Say("Marcos!");
      Wait(10);
      player.Say("Tendre que hablar con el");
      Wait(40);
      player.EnterRoom(7,  960,  1080, eDirectionDown);
    }
    else if(!hasLookedAtMobileAfterPickingItUp){
        player.Say("En el grupo con Bielsa, Borja, Adolfo y Mario");
        player.Say("Quedamos para cenar el sabado?");
        player.Say("La Jimena");
        player.Say("Jugamos al padel el domingo?");
        if(player.Room == 5){
          cElena.Say("Tira tira...");
        }
        player.Say("Mensaje de numero desconocido");
        player.Say("Se quien tiene lo que buscas...");
        player.Say("Se quien tiene el Big Whoop");
        if(player.Room == 5){
          cElena.Say("Por fin vamos a acabar esta maldita gincana!");
        }
        player.Say("Lo tiene...");
        Wait(40);
        player.Say("Mierda!");
        if(player.Room == 5){
          cElena.Say("Que pasa?");
        }
        player.Say("Me he quedado sin bateria");
        player.Say("Y no me ha dado tiempo a leerlo");
        if(player.Room == 5){
          cElena.Say("Muy bien, pues carga el movil");
          player.Say("Voy!");
        }
        dElena.SetOptionState(2, eOptionOn);
        hasLookedAtMobileAfterPickingItUp = true;
    }
    else{
        player.Say("Necesito cargarlo");
        player.Say("Asi podre leer el mensaje y saber quien tiene el Big Whoop");
    }
 }
 else Verbs.Unhandled();
}

function iWaterGlass_OtherClick()
{
  if(Verbs.UsedAction(eGA_LookAt)) {
    player.Say("Lleno de agua fresquita");
  }
  else Verbs.Unhandled();
}

function iEmptyGlass_OtherClick()
{
  if(Verbs.UsedAction(eGA_LookAt)) {
    player.Say("Necesito llenarlo de agua para Elena");
  }
  else Verbs.Unhandled();
}

function iTwoEuroCoin_OtherClick()
{
  if(Verbs.UsedAction(eGA_LookAt)) {
    player.Say("Soy rico!");
  }
  else Verbs.Unhandled();
}

function iOneEuroCoin_OtherClick()
{
  if(Verbs.UsedAction(eGA_LookAt)) {
    player.Say("Soy rico!");
  }
  else Verbs.Unhandled();
}

function iTenEuroNote_OtherClick()
{
  if(Verbs.UsedAction(eGA_LookAt)) {
    player.Say("Soy rico!");
  }
  else Verbs.Unhandled();
}

function iBullet_OtherClick()
{
  if(Verbs.UsedAction(eGA_LookAt)) {
    player.Say("Tengo que llevarsela a Antonov");
  }
  else Verbs.Unhandled();
}

function iIbuprofen_OtherClick()
{
  if(Verbs.UsedAction(eGA_LookAt)) {
    player.Say("Tengo que darsela a Elena");
  }
  else Verbs.Unhandled();
}

function iClosetKey_OtherClick()
{
  if(Verbs.UsedAction(eGA_LookAt)) {
    player.Say("La llave del armario");
  }
  else Verbs.Unhandled();
}

function iBatteries_OtherClick()
{
if(Verbs.UsedAction(eGA_LookAt)) {
  player.Say("Pilas a tope de carga");
   }
else if(Verbs.UsedAction(eGA_UseInv) && player.ActiveInventory == iClock){
    hasNeedToFixClock = false;
    hasPutBatteriesOnClock = true;
    player.LoseInventory(iBatteries);
    player.Say("Arreglao");
 }
 else if(Verbs.UsedAction(eGA_UseInv) && player.ActiveInventory == iRemoteControl){
    player.LoseInventory(iBatteries);
    areBatteriesOutFromRemoteControl = false;
    player.Say("Pa dentro");
   }
 else Verbs.Unhandled();
}

/***********************************************************************
 * Character functions
 * 
 ***********************************************************************/

function cElena_AnyClick()
{

  if(Verbs.UsedAction(eGA_LookAt)) {
    player.Say("Quiza no lo parezca, pero es Elena");
   }
  else if(Verbs.UsedAction(eGA_TalkTo)) {
    Verbs.MovePlayer(1165, 800);
    player.FaceDirection(eDirectionRight);
    player.Say("Kuklinski!");
    cElena.Say("Que pasa?");
    dElena.Start();
  }
  else if(Verbs.UsedAction(eGA_GiveTo)){
   
    if(Verbs.GetItemGiven() == iWaterGlass){
      Verbs.MovePlayer(1165, 800);
      player.FaceDirection(eDirectionRight);
      hasNeedToImmediatelyShowLivingRoomWaterGlass = true;
      player.LoseInventory(iWaterGlass);
      cElena.Say("Gracias!");
      hasGivenWaterGlassToElena = true;
      if(hasGivenIbuprofenToElena){
        dElena.SetOptionState(6, eOptionOffForever);
        dElena.SetOptionState(7, eOptionOn);
      }
    }
    else if(Verbs.GetItemGiven() == iIbuprofen){
      Verbs.MovePlayer(1165, 800);
      player.FaceDirection(eDirectionRight);
      player.LoseInventory(iIbuprofen);
      cElena.Say("Gracias!");
      hasGivenIbuprofenToElena = true;
      if(hasGivenWaterGlassToElena){
        dElena.SetOptionState(6, eOptionOffForever);
        dElena.SetOptionState(7, eOptionOn);
      }
    }
    else if(Verbs.GetItemGiven() == iCigarretes){
        Verbs.MovePlayer(1165, 800);
        player.FaceDirection(eDirectionRight);
        cElena.Say("Tabaquico rico");
    }
    else{
        player.Say("No le quiero dar eso");
    }
  }
  else Verbs.Unhandled();
 
}

function cCabarra_AnyClick()
{
  if(Verbs.UsedAction(eGA_LookAt)) {
    player.FaceCharacter(cCabarra);
  player.Say("La cabarraaa!");
 }
 else if(Verbs.UsedAction(eGA_TalkTo)) {
    Verbs.MovePlayer(970,  700);
    player.FaceDirection(eDirectionRight);
    String greetings[] = new String[9];
    greetings[0]= "Cabarra!";
    greetings[1]= "Calabuch!";
    greetings[2]= "Escrotor!";
    greetings[3]= "Lavavaginas Martinez!";
    greetings[4]= "Proxeneta!";
    greetings[5]= "Pastillo!";
    greetings[6]= "Tristalbol!";
    greetings[7]= "Cabezudo!";
    greetings[8]= "Cabeza!";    
   String greeting =greetings[Random(8)];
   player.Say(greeting);
   cCabarra.Say("Hola Juan");
   dCabarra.Start();
 }
 else if(Verbs.UsedAction(eGA_GiveTo)){
    if(Verbs.GetItemGiven() == iCigarretes){
        Verbs.MovePlayer(970,  600);
    player.FaceDirection(eDirectionRight);
        cCabarra.Say("Un cigar, gracias Juan");
    }
    else{
        player.Say("No le quiero dar eso");
    }
 }
 else Verbs.Unhandled();
}


function cAntonov_AnyClick()
{
if(Verbs.UsedAction(eGA_LookAt)) {
  player.Say("Antonov, general de las legiones Fenix");
 }
 else if(Verbs.UsedAction(eGA_TalkTo)) {
   Verbs.MovePlayer(420,  895);
   player.FaceDirection(eDirectionLeft);
   player.Say("Antonov!");
   cAntonov.Say("Hola camarada");
   dAntonov.Start();
 }
 else if(Verbs.UsedAction(eGA_GiveTo)){
   
    if(Verbs.GetItemGiven() == iBullet){
      Verbs.MovePlayer(420,  895);
      player.FaceDirection(eDirectionLeft);
      player.Say("Aqui tienes la municion");
      player.LoseInventory(iBullet);
      cAntonov.Say("mmm polvora fresca");
      cAntonov.Say("Venid a mi, franchutes!");
      cAntonov.Say("Aqui tienes tu pastilla, no te la comas toda de golpe");
      player.AddInventory(iIbuprofen);
      player.Say("Gracias camarada");
      dAntonov.SetOptionState(2, eOptionOffForever);
      dAntonov.SetOptionState(3, eOptionOffForever);
      dCabarra.SetOptionState(3, eOptionOffForever);
    }
    else if(Verbs.GetItemGiven() == iCigarretes){
        Verbs.MovePlayer(420,  895);
        player.FaceDirection(eDirectionLeft);
        cAntonov.Say("Venga esa cigarreta");
        cAntonov.Say("Gracias");
    }
    else{
        player.Say("No le quiero dar eso");
    }
 }
 else Verbs.Unhandled();
}



